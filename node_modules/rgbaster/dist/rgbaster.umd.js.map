{"version":3,"file":"rgbaster.umd.js","sources":["../src/helpers.ts","../src/index.ts"],"sourcesContent":["\nexport const getContext = (width, height) => {\n  const canvas = document.createElement('canvas')\n  canvas.setAttribute('width', width)\n  canvas.setAttribute('height', height)\n  return canvas.getContext('2d')\n}\n\nexport const getImageData = (src: string, scale: number = 1): Promise<Uint8ClampedArray> => {\n  const img = new Image()\n\n  // Can't set cross origin to be anonymous for data url's\n  // https://github.com/mrdoob/three.js/issues/1305\n  if (!src.startsWith('data')) img.crossOrigin = 'Anonymous'\n\n  return new Promise((resolve, reject) => {\n    img.onload = function () {\n      const width = img.width * scale\n      const height = img.height * scale\n      const context = getContext(width, height)\n      context.drawImage(img, 0, 0, width, height)\n\n      const { data } = context.getImageData(0, 0, width, height)\n      resolve(data)\n    }\n\n    const errorHandler = () => reject(new Error('An error occurred attempting to load image'))\n\n    img.onerror = errorHandler\n    img.onabort = errorHandler\n    img.src = src\n  })\n}\n\nexport const getCounts = (data: Uint8ClampedArray, ignore: string[]): [] => {\n  const countMap = {}\n\n  for (let i = 0; i < data.length; i += 4 /* 4 gives us r, g, b, and a*/) {\n    let alpha: number = data[i + 3]\n    // skip FULLY transparent pixels\n    if (alpha === 0) continue\n\n    let rgbComponents: number[] = Array.from(data.subarray(i, i + 3))\n\n    // skip undefined data\n    if (rgbComponents.indexOf(undefined) !== -1) continue\n\n    let color: string = alpha && alpha !== 255\n      ? `rgba(${[...rgbComponents, alpha].join(',')})`\n      : `rgb(${rgbComponents.join(',')})`\n\n    // skip colors in the ignore list\n    if (ignore.indexOf(color) !== -1) continue\n\n    if (countMap[color]) {\n      countMap[color].count++\n    } else {\n      countMap[color] = { color, count: 1 }\n    }\n  }\n\n  const counts = Object.values(countMap) as []\n  return counts.sort((a: any, b: any) => b.count - a.count)\n}\n","import {\n  getImageData,\n  getCounts\n} from './helpers'\n\ninterface Opts {\n  ignore?: string[]\n  scale?: number\n  skipTransparentPixels?: boolean\n}\n\nconst defaultOpts: Opts = {\n  ignore: [],\n  scale: 1\n}\n\nexport default async function (src: string, opts: Opts = defaultOpts): Promise<{ color: string, count: number }[] > {\n  opts = { ...defaultOpts, ...opts }\n\n  const {\n    ignore, // for example, to ignore white and black:  [ 'rgb(0,0,0)', 'rgb(255,255,255)' ]\n    scale   // 0 = best performance, lowest fidelity\n            // 1 = best fidelity, worst performance\n  } = opts\n\n  if (scale > 1 || scale <= 0) {\n    console.warn(`You set scale to ${scale}, which isn't between 0-1. This is either pointless (> 1) or a no-op (â‰¤ 0)`)\n  }\n\n  const data = await getImageData(src, scale)\n  return getCounts(data, ignore)\n}\n"],"names":["const","getImageData","src","scale","img","Image","startsWith","crossOrigin","Promise","resolve","reject","onload","width","height","context","canvas","document","createElement","setAttribute","getContext","drawImage","errorHandler","Error","onerror","onabort","defaultOpts","ignore","opts","Object","console","warn","data","countMap","i","length","alpha","rgbComponents","Array","from","subarray","indexOf","undefined","color","join","count","values","sort","a","b","getCounts"],"mappings":"uKACOA,IAOMC,WAAgBC,EAAaC,kBAAgB,OAClDC,EAAM,IAAIC,aAIXH,EAAII,WAAW,UAASF,EAAIG,YAAc,aAExC,IAAIC,iBAASC,EAASC,GAC3BN,EAAIO,OAAS,eACLC,EAAQR,EAAIQ,MAAQT,EACpBU,EAAST,EAAIS,OAASV,EACtBW,WAlBeF,EAAOC,OAC1BE,EAASC,SAASC,cAAc,iBACtCF,EAAOG,aAAa,QAASN,GAC7BG,EAAOG,aAAa,SAAUL,GACvBE,EAAOI,WAAW,MAcLA,CAAWP,EAAOC,GAClCC,EAAQM,UAAUhB,EAAK,EAAG,EAAGQ,EAAOC,SAEnBC,EAAQb,aAAa,EAAG,EAAGW,EAAOC,GACnDJ,eAGIY,oBAAqBX,EAAO,IAAIY,MAAM,gDAE5ClB,EAAImB,QAAUF,EACdjB,EAAIoB,QAAUH,EACdjB,EAAIF,IAAMA,KCnBRuB,EAAoB,CACxBC,OAAQ,GACRvB,MAAO,mBAGsBD,EAAayB,kBAAaF,cACvDE,EAAOC,iBAAKH,8BAQRtB,EAAQ,GAAKA,GAAS,IACxB0B,QAAQC,yBAAyB3B,gGAGhBF,EAAaC,EAAKC,kBAA/B4B,mBDKkBA,EAAyBL,WAC3CM,EAAW,GAERC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,GAAK,EAAkC,KAClEE,EAAgBJ,EAAKE,EAAI,MAEf,IAAVE,OAEAC,EAA0BC,MAAMC,KAAKP,EAAKQ,SAASN,EAAGA,EAAI,QAGpB,IAAtCG,EAAcI,aAAQC,QAEtBC,EAAgBP,GAAmB,MAAVA,UACbC,UAAeD,IAAOQ,KAAK,gBAChCP,EAAcO,KAAK,UAGC,IAA3BjB,EAAOc,QAAQE,KAEfV,EAASU,GACXV,EAASU,GAAOE,QAEhBZ,EAASU,GAAS,OAAEA,EAAOE,MAAO,aAIvBhB,OAAOiB,OAAOb,GACfc,cAAMC,EAAQC,UAAWA,EAAEJ,MAAQG,EAAEH,QChC5CK,CAAUlB,EAAML"}